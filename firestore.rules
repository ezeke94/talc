rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection: Only Admins can read/write user management data
    match /users/{userId} {
      // Admins have full access
      allow read, write: if isAdmin();

      // A signed-in user can read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;

      // A signed-in user can create their own profile with safe defaults
      allow create: if request.auth != null && request.auth.uid == userId && isSafeSelfCreate();

      // A signed-in user can update only notification-related fields on their own doc
      allow update: if request.auth != null && request.auth.uid == userId && isSelfNotificationUpdate();

      // Per-user devices subcollection for multi-device FCM tokens
      match /devices/{deviceId} {
        // Owner can manage their own device tokens
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Events collection
    match /events/{eventId} {
      // Evaluators can only mark as completed (tick), not edit/delete
      allow update: if isEvaluator() && isTickUpdate();
      allow update, delete: if !isEvaluator();
      allow create: if request.auth != null;
      allow read: if request.auth != null;
    }

    // SOPs collection
    match /sops/{sopId} {
      // Evaluators cannot edit or delete
      allow update, delete: if !isEvaluator();
      allow create: if request.auth != null;
      allow read: if request.auth != null;
    }

    // Other collections: allow authenticated users
    match /{document=**} {
      // Default to read-only for authenticated users; writes must be explicitly allowed above
      allow read: if request.auth != null;
    }

    function isAdmin() {
      return request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "Admin";
    }
    function isSafeSelfCreate() {
      // Allow creating basic profile with Evaluator role only
      return request.resource.data.role == "Evaluator";
    }
    function isSelfNotificationUpdate() {
      // Only allow changing notification-related fields
      return request.resource.data.diff(resource.data).changedKeys().hasOnly([
        'fcmToken',
        'notificationsEnabled',
        'lastTokenUpdate',
        'notificationPreferences'
      ]);
    }
    function isEvaluator() {
      return request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "Evaluator";
    }
    function isTickUpdate() {
      // Only allow update if status is being set to "completed"
      return request.resource.data.status == "completed";
    }
  }
}
